{"version":3,"sources":["pages/landing-page/icons/matta.png","pages/landing-page/icons/unicorn.svg","components/romoversikt/icons/andre-etasje.svg","components/romoversikt/icons/forste-etasje.svg","components/romoversikt/icons/romfordeling-logo.svg","components/logo/icons/camp-hortenfestival.svg","components/auth/Authentication.tsx","components/input/Input.tsx","components/logo/Logo.tsx","components/input-form/InputForm.tsx","components/login/Login.tsx","components/user-information/UserInformation.tsx","pages/landing-page/LandingPage.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","WrappedComponent","AuthenticationContext","createContext","AuthenticationProvider","children","useState","user","auth","currentUser","isLoading","signOut","authentication","setAuthentication","useEffect","onAuthStateChanged","newUser","Provider","value","Input","placeholder","onChange","type","event","className","Logo","src","headingLogo","alt","InputForm","onSubmit","errorMessage","buttonLabel","Login","email","setEmail","password","setPassword","setErrorMessage","isValidInput","preventDefault","signInWithEmailAndPassword","catch","error","code","target","UserInformation","name","setName","updateUser","a","updateProfile","displayName","withAuthentication","x","y","mousePosition","setMousePosition","useContext","Error","useAuthentication","providerData","forEach","information","isTochDevice","window","screenWidth","document","getElementById","offsetWidth","screenHeight","offsetHeight","xPosition","yPosition","onMouseMove","pageX","pageY","onClick","confetti","origin","Math","random","matta","unicorn","classNames","style","left","top","romfordelingLogo","forsteEtasje","andreEtasje","then","console","log","props","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.19a742df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/matta.fb322a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/unicorn.c53a49bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/andre-etasje.3d06331f.svg\";","module.exports = __webpack_public_path__ + \"static/media/forste-etasje.ec3cd620.svg\";","module.exports = __webpack_public_path__ + \"static/media/romfordeling-logo.a73f185c.svg\";","module.exports = __webpack_public_path__ + \"static/media/camp-hortenfestival.2a97b4a7.svg\";","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseNotInitialized = firebase.apps.length === 0;\nif (firebaseNotInitialized) {\n    const firebaseConfig = {\n        apiKey: 'AIzaSyAnkyD9_105zFHP4qanGUYdmynBHen65KM',\n        authDomain: 'camp-hortenfestvial.firebaseapp.com',\n        databaseURL: 'https://camp-hortenfestvial.firebaseio.com',\n        projectId: 'camp-hortenfestvial',\n        storageBucket: 'camp-hortenfestvial.appspot.com',\n        messagingSenderId: '32123979841',\n        appId: '1:32123979841:web:c321a59f4a94a047d19ec0',\n        measurementId: 'G-TC8JQDP77T',\n    };\n\n    firebase.initializeApp(firebaseConfig);\n}\n\ninterface Authentication {\n    user: firebase.User | null;\n    isLoading: boolean;\n    signOut: () => Promise<void>;\n}\n\nconst AuthenticationContext = createContext<Authentication | null>(null);\n\nconst AuthenticationProvider: React.FC = ({ children }) => {\n    const [authentication, setAuthentication] = useState<Authentication>({\n        user: firebase.auth().currentUser,\n        isLoading: true,\n        signOut: () => firebase.auth().signOut(),\n    });\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(newUser => {\n            setAuthentication({\n                ...authentication,\n                user: newUser,\n                isLoading: false,\n            });\n        });\n    }, [authentication]);\n\n    return <AuthenticationContext.Provider value={authentication}>{children}</AuthenticationContext.Provider>;\n};\n\nexport const useAuthentication = (): Authentication => {\n    const authentication = useContext(AuthenticationContext);\n    if (!authentication) {\n        throw new Error('useAuthentication can only be used within an AuthenticationProvider');\n    }\n    return authentication;\n};\n\nexport const withAuthentication = function withAuthenticationWrapper<T>(\n    WrappedComponent: React.FC<T>,\n): React.FC<T> {\n    return (props: T) => (\n        <AuthenticationProvider>\n            <WrappedComponent {...props} />\n        </AuthenticationProvider>\n    );\n};\n","import React from 'react';\nimport './input.css';\n\ninterface Props {\n    placeholder: string;\n    value: string;\n    onChange: (event: any) => void;\n    type?: string;\n}\n\nconst Input: React.FC<Props> = ({ placeholder, value, onChange, type = 'text' }) => (\n    <input\n        placeholder={placeholder}\n        value={value}\n        type={type}\n        onChange={event => onChange(event)}\n        className=\"input\"\n    />\n);\n\nexport default Input;\n","import headingLogo from './icons/camp-hortenfestival.svg';\nimport React from 'react';\nimport './logo.css';\n\nconst Logo = () => (\n    <div className=\"heading-logo-container\">\n        <img src={headingLogo} alt=\"camp-hortenfestival-logo\" />\n    </div>\n);\n\nexport default Logo;\n","import React, { FormEvent } from 'react';\nimport './input-form.css';\n\ninterface Props {\n    onSubmit: (event: FormEvent) => void;\n    errorMessage?: string;\n    buttonLabel: string;\n}\n\nconst InputForm: React.FC<Props> = ({ onSubmit, errorMessage, buttonLabel, children }) => (\n    <form onSubmit={onSubmit} className=\"login-form\">\n        <div className=\"input-container\">\n            {children}\n            {errorMessage && <span>{errorMessage}</span>}\n        </div>\n\n        <button type=\"submit\" className=\"login-button\">\n            <span>{buttonLabel}</span>\n        </button>\n    </form>\n);\n\nexport default InputForm;\n","import React, { FormEvent, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport './login.css';\nimport Input from '../input/Input';\nimport Logo from '../logo/Logo';\nimport InputForm from \"../input-form/InputForm\";\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const isValidInput = email && password;\n\n    const handleSubmit = (event: FormEvent) => {\n        event.preventDefault();\n\n        if (isValidInput) {\n            firebase\n                .auth()\n                .signInWithEmailAndPassword(email, password)\n                .catch((error: firebase.auth.Error) => {\n                    if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n                        setErrorMessage('E-posten og passordet matcher ikke.');\n                    } else {\n                        setErrorMessage('Her gikk noe galt. Prøv igjen eller ta kontakt med support.');\n                    }\n                });\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <Logo />\n            <InputForm onSubmit={handleSubmit} errorMessage={errorMessage} buttonLabel=\"Here I come!\">\n                <Input\n                    value={email}\n                    placeholder=\"Hva er mailen din a?\"\n                    onChange={event => setEmail(event.target.value)}\n                    type=\"email\"\n                />\n                <Input\n                    value={password}\n                    placeholder=\"Passord\"\n                    type=\"password\"\n                    onChange={event => setPassword(event.target.value)}\n                />\n            </InputForm>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Input from '../input/Input';\nimport InputForm from '../input-form/InputForm';\nimport './user-information.css';\n\ninterface Props {\n    user: firebase.User;\n}\n\nconst UserInformation: React.FC<Props> = ({ user }) => {\n    const [name, setName] = useState<string>('');\n    const updateUser = async () => {\n        await user.updateProfile({\n            displayName: name,\n        });\n    };\n\n    return (\n        <div className=\"user-info-container\">\n            <div className=\"heading-container\">\n                <h1 className=\"heading\">Du! Ja du, ja.</h1>\n                <p>Du må fylle ut litt informasjon om deg selv</p>\n            </div>\n            <InputForm onSubmit={updateUser} buttonLabel=\"Nok om meg\">\n                <Input\n                    onChange={event => setName(event.target.value)}\n                    placeholder=\"Hva heter du a?\"\n                    value={name}\n                />\n            </InputForm>\n        </div>\n    );\n};\n\nexport default UserInformation;\n","import React, { useState } from 'react';\nimport matta from './icons/matta.png';\nimport unicorn from './icons/unicorn.svg';\nimport './landing-page.css';\nimport confetti from 'canvas-confetti';\nimport classNames from 'classnames';\nimport andreEtasje from '../../components/romoversikt/icons/andre-etasje.svg';\nimport forsteEtasje from '../../components/romoversikt/icons/forste-etasje.svg';\nimport romfordelingLogo from '../../components/romoversikt/icons/romfordeling-logo.svg';\nimport { useAuthentication, withAuthentication } from '../../components/auth/Authentication';\nimport Login from '../../components/login/Login';\nimport Logo from '../../components/logo/Logo';\nimport UserInformation from '../../components/user-information/UserInformation';\n\nconst LandingPage = () => {\n    const [mousePosition, setMousePosition] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\n    const { user, signOut } = useAuthentication();\n\n    if (!user) {\n        return <Login />;\n    }\n\n    if (user) {\n        let displayName;\n        user.providerData.forEach(information => {\n            displayName = information!.displayName;\n        });\n\n        if (!displayName) {\n            return <UserInformation user={user} />;\n        }\n    }\n\n    const onMouseMove = (event: any) => {\n        setMousePosition({ x: event.pageX, y: event.pageY });\n    };\n\n    const isTochDevice = 'ontouchstart' in window;\n\n    const screenWidth =\n        document && document.getElementById('root') && document.getElementById('root')!.offsetWidth;\n    const screenHeight =\n        document && document.getElementById('root') && document.getElementById('root')!.offsetHeight;\n\n    const xPosition = mousePosition.x;\n    const yPosition = mousePosition.y;\n\n    const launceConfetti = () => {\n        confetti({\n            origin: {\n                x: screenWidth && !isTochDevice ? xPosition / screenWidth : Math.random(),\n                y: screenHeight && !isTochDevice ? yPosition / screenHeight : Math.random(),\n            },\n        });\n    };\n\n    const handleSignOut = () => {\n        signOut().then(() => console.log('Du er logget ut'));\n    };\n\n    return (\n        <div className=\"app\" onMouseMove={onMouseMove} onClick={launceConfetti}>\n            <header className=\"app-header\">\n                <img src={matta} className=\"spinning-user\" alt=\"logo\" />\n            </header>\n\n            <div className=\"landing-page-top\">\n                <img\n                    src={unicorn}\n                    className={classNames('unicorn', isTochDevice && 'unicorn-mobile')}\n                    alt=\"unicorn\"\n                    style={{ left: isTochDevice ? -130 : xPosition, top: isTochDevice ? 50 : yPosition }}\n                />\n\n                <Logo />\n                <p className=\"festival-dates\">18. - 21. juni</p>\n            </div>\n            <div className=\"romoversikt\">\n                <div className=\"romfordeling-heading\">\n                    <img src={romfordelingLogo} alt=\"romfordeling-logo\" />\n                </div>\n                <img className=\"etasje\" src={forsteEtasje} alt=\"forste-etasje\" />\n                <img className=\"etasje\" src={andreEtasje} alt=\"andre-etasje\" />\n            </div>\n\n            <button onClick={handleSignOut}>Logg ut</button>\n        </div>\n    );\n};\n\nexport default withAuthentication(LandingPage);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LandingPage from './pages/landing-page/LandingPage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<LandingPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}