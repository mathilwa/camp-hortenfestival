{"version":3,"sources":["pages/landing-page/landing-page.less","components/spinner/spinner.less","components/input-form/input-form.less","pages/user-information/user-information.less","components/input/input.less","components/spinner/icons/unicorn-spinner.svg","pages/login/login.less","components/logo/icons/camp-hortenfestival.svg","components/logo/logo.less","pages/landing-page/icons/matta.png","pages/landing-page/icons/unicorn.svg","components/romoversikt/icons/andre-etasje.svg","components/romoversikt/icons/forste-etasje.svg","components/romoversikt/icons/romfordeling-logo.svg","serviceWorker.ts","components/input/Input.tsx","components/input-form/InputForm.tsx","components/spinner/Spinner.tsx","components/auth/Authentication.tsx","index.tsx","pages/user-information/UserInformation.tsx","components/logo/Logo.tsx","pages/login/Login.tsx","pages/landing-page/LandingPage.tsx","pages/landing-page/LandingPageWrapper.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Input","placeholder","value","onChange","type","event","className","css","input","InputForm","onSubmit","errorMessage","buttonLabel","children","loginForm","inputContainer","loginButton","Spinner","spinner","src","unicornspinner","alt","spinnerTextContainer","spinnerText","dot","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","RouteName","AuthenticationContext","createContext","AuthenticationProvider","useState","user","auth","currentUser","isLoading","signOut","authentication","setAuthentication","history","useHistory","useEffect","onAuthStateChanged","newUser","prevAuth","Provider","push","Login","useAuthentication","useContext","Error","withAuthentication","WrappedComponent","props","providerData","displayName","name","setName","updateUser","a","updateProfile","Hjem","container","headingContainer","heading","target","Logo","headingLogoContainer","headingLogo","email","setEmail","password","setPassword","setErrorMessage","isValidInput","handleSubmit","preventDefault","signInWithEmailAndPassword","catch","error","code","withRouter","x","y","mousePosition","setMousePosition","isTochDevice","screenWidth","document","getElementById","offsetWidth","screenHeight","offsetHeight","xPosition","yPosition","userName","app","appHeader","onClick","Deg","matta","spinningUser","landingPageTop","confetti","origin","Math","random","onMouseMove","pageX","pageY","unicorn","classNames","unicornMobile","style","left","top","festivalDates","romoversikt","romfordelingHeading","romfordelingLogo","etasje","forsteEtasje","andreEtasje","then","console","log","ReactDOM","render","exact","path","component","LandingPageWrapper","CampHortenFestival","UserInformation","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,IAAM,YAAY,UAAY,kBAAkB,aAAe,qBAAqB,cAAgB,sBAAsB,QAAU,gBAAgB,cAAgB,sBAAsB,YAAc,oBAAoB,eAAiB,uBAAuB,YAAc,oBAAoB,oBAAsB,4BAA4B,OAAS,eAAe,SAAW,iBAAiB,iBAAiB,uBAAuB,gBAAgB,wB,oBCAtdD,EAAOC,QAAU,CAAC,QAAU,gBAAgB,YAAc,oBAAoB,YAAc,oBAAoB,qBAAuB,6BAA6B,IAAM,YAAY,MAAQ,gB,qBCA9LD,EAAOC,QAAU,CAAC,UAAY,kBAAkB,eAAiB,uBAAuB,YAAc,sB,gBCAtGD,EAAOC,QAAU,CAAC,UAAY,kBAAkB,iBAAmB,yBAAyB,QAAU,kB,0BCAtGD,EAAOC,QAAU,CAAC,MAAQ,gB,iBCD1BD,EAAOC,QAAU,IAA0B,6C,kBCC3CD,EAAOC,QAAU,CAAC,UAAY,oB,gBCD9BD,EAAOC,QAAU,IAA0B,iD,gBCC3CD,EAAOC,QAAU,CAAC,qBAAuB,+B,gBCDzCD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,kBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,+JCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4DCESC,EAVgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAvB,IAAiCC,YAAjC,MAAwC,OAAxC,SAC3B,2BACIH,YAAaA,EACbC,MAAOA,EACPE,KAAMA,EACND,SAAU,SAAAE,GAAK,OAAIF,EAASE,IAC5BC,UAAWC,IAAIC,S,iBCMRC,EAboB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,SAAxC,OAC/B,0BAAMH,SAAUA,EAAUJ,UAAWC,IAAIO,WACrC,yBAAKR,UAAWC,IAAIQ,gBACfF,EACAF,GAAgB,8BAAOA,IAG5B,4BAAQP,KAAK,SAASE,UAAWC,IAAIS,aACjC,8BAAOJ,M,0ECCJK,EAdC,WACZ,OACI,yBAAKX,UAAWC,IAAIW,SAChB,yBAAKC,IAAKC,IAAgBC,IAAI,qBAC9B,wBAAIf,UAAWC,IAAIe,sBACf,0BAAMhB,UAAWC,IAAIgB,aAArB,gCACA,0BAAMjB,UAAWC,IAAIiB,KAArB,KACA,0BAAMlB,UAAWC,IAAIiB,KAArB,KACA,0BAAMlB,UAAWC,IAAIiB,KAArB,QCJhB,GADwD,IAAzBC,IAASC,KAAKC,OACjB,CAYxBF,IAASG,cAXc,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAYvB,ICpBYC,EDoBNC,EAAwBC,wBAAqC,MAE7DC,EAAmC,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,EACX4B,mBAAyB,CACjEC,KAAMjB,IAASkB,OAAOC,YACtBC,WAAW,EACXC,QAAS,kBAAMrB,IAASkB,OAAOG,aAJoB,mBAChDC,EADgD,KAChCC,EADgC,KAOjDC,EAAUC,cAchB,OAZAC,qBAAU,WASN,OARoB1B,IAASkB,OAAOS,oBAAmB,SAAAC,GACnDL,GAAkB,SAAAM,GAAQ,sBACnBA,EADmB,CAEtBZ,KAAMW,EACNR,WAAW,YAKpB,IAECE,EAAeF,UACR,kBAAC,EAAD,MAGNE,EAAeF,WAAcE,EAAeL,KAK1C,kBAACJ,EAAsBiB,SAAvB,CAAgCrD,MAAO6C,GAAiBlC,IAJ3DoC,EAAQO,KAAKnB,EAAUoB,OAChB,OAMFC,EAAoB,WAC7B,IAAMX,EAAiBY,qBAAWrB,GAClC,IAAKS,EACD,MAAM,IAAIa,MAAM,uEAEpB,OAAOb,GAGEc,EAAqB,SAC9BC,GAEA,OAAO,SAACC,GAAD,OACH,kBAAC,EAAD,KACI,kBAACD,EAAqBC,MEpCnBF,KAhCmB,WAAO,IAC7BnB,EAASgB,IAAThB,KACFO,EAAUC,cAFoB,EAGZT,mBACpBC,GAAQA,EAAKsB,aAAa,IAAMtB,EAAKsB,aAAa,GAAGC,YAAcvB,EAAKsB,aAAa,GAAGC,YAAc,IAJtE,mBAG7BC,EAH6B,KAGvBC,EAHuB,KAO9BC,EAAU,uCAAG,sBAAAC,EAAA,sEACT3B,EAAM4B,cAAc,CACtBL,YAAaC,IAFF,OAKfjB,EAAQO,KAAKnB,EAAUkC,MALR,2CAAH,qDAQhB,OACI,yBAAKjE,UAAWC,IAAIiE,WAChB,yBAAKlE,UAAWC,IAAIkE,kBAChB,wBAAInE,UAAWC,IAAImE,SAAnB,kBACA,8EAEJ,kBAAC,EAAD,CAAWhE,SAAU0D,EAAYxD,YAAY,cACzC,kBAAC,EAAD,CACIT,SAAU,SAAAE,GAAK,OAAI8D,EAAQ9D,EAAMsE,OAAOzE,QACxCD,YAAY,kBACZC,MAAOgE,S,mDCxBZU,EANF,kBACT,yBAAKtE,UAAWC,IAAIsE,sBAChB,yBAAK1D,IAAK2D,IAAazD,IAAI,+BCqDpBoC,EAjDD,WAAO,IAAD,EACUhB,mBAAS,IADnB,mBACTsC,EADS,KACFC,EADE,OAEgBvC,mBAAS,IAFzB,mBAETwC,EAFS,KAECC,EAFD,OAIwBzC,mBAAS,IAJjC,mBAIT9B,EAJS,KAIKwE,EAJL,KAKVC,EAAeL,GAASE,EAExBhC,EAAUC,cAEVmC,EAAY,uCAAG,WAAOhF,GAAP,SAAAgE,EAAA,yDACjBhE,EAAMiF,kBAEFF,EAHa,gCAIP3D,IACDkB,OACA4C,2BAA2BR,EAAOE,GAClCO,OAAM,SAACC,GACe,wBAAfA,EAAMC,MAAiD,wBAAfD,EAAMC,KAC9CP,EAAgB,uCAEhBA,EAAgB,qEAXf,OAeblC,EAAQO,KAAKnB,EAAUkC,MAfV,2CAAH,sDAmBlB,OACI,yBAAKjE,UAAWC,IAAIiE,WAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW9D,SAAU2E,EAAc1E,aAAcA,EAAcC,YAAY,gBACvE,kBAAC,EAAD,CACIV,MAAO6E,EACP9E,YAAY,uBACZE,SAAU,SAAAE,GAAK,OAAI2E,EAAS3E,EAAMsE,OAAOzE,QACzCE,KAAK,UAET,kBAAC,EAAD,CACIF,MAAO+E,EACPhF,YAAY,UACZG,KAAK,WACLD,SAAU,SAAAE,GAAK,OAAI6E,EAAY7E,EAAMsE,OAAOzE,a,6IC4BjDyF,eAAW9B,GAlEN,WAAO,IAAD,EACoBpB,mBAAmC,CAAEmD,EAAG,EAAGC,EAAG,IADlE,mBACfC,EADe,KACAC,EADA,OAEIrC,IAAlBhB,EAFc,EAEdA,KAAMI,EAFQ,EAERA,QACRG,EAAUC,cAOV8C,EAAe,iBAAkBpG,OAEjCqG,EACFC,UAAYA,SAASC,eAAe,SAAWD,SAASC,eAAe,QAASC,YAC9EC,EACFH,UAAYA,SAASC,eAAe,SAAWD,SAASC,eAAe,QAASG,aAE9EC,EAAYT,EAAcF,EAC1BY,EAAYV,EAAcD,EAe1BY,EAAW/D,GAAQA,EAAKsB,aAAa,IAAMtB,EAAKsB,aAAa,GAAGC,YAEtE,OACI,yBAAK3D,UAAWC,IAAImG,KAChB,4BAAQpG,UAAWC,IAAIoG,UAAWC,QAAS,kBAAM3D,EAAQO,KAAKnB,EAAUwE,OACpE,uBAAGvG,UAAWC,IAAIkG,UAAWA,EAAQ,eAAWA,EAAX,KAAyB,OAA9D,KACA,yBAAKtF,IAAK2F,IAAOxG,UAAWC,IAAIwG,aAAc1F,IAAI,UAGtD,yBAAKf,UAAWC,IAAIyG,eAAgBJ,QAtBrB,WACnBK,YAAS,CACLC,OAAQ,CACJtB,EAAGK,IAAgBD,EAAeO,EAAYN,EAAckB,KAAKC,SACjEvB,EAAGQ,IAAiBL,EAAeQ,EAAYH,EAAec,KAAKC,aAkBVC,YArCjD,SAAChH,GACjBA,EAAMiF,iBACNS,EAAiB,CAAEH,EAAGvF,EAAMiH,MAAOzB,EAAGxF,EAAMkH,UAoCpC,yBACIpG,IAAKqG,IACLlH,UAAWmH,IAAWlH,IAAIiH,QAAL,eAAiBjH,IAAImH,cAAgB1B,IAC1D3E,IAAI,UACJsG,MAAO,CAAEC,KAAM5B,GAAgB,IAAMO,EAAWsB,IAAK7B,EAAe,GAAKQ,KAG7E,kBAAC,EAAD,MACA,uBAAGlG,UAAWC,IAAIuH,eAAlB,mBAEJ,yBAAKxH,UAAWC,IAAIwH,aAChB,yBAAKzH,UAAWC,IAAIyH,qBAChB,yBAAK7G,IAAK8G,KAAkB5G,IAAI,uBAEpC,yBAAKf,UAAWC,IAAI2H,OAAQ/G,IAAKgH,KAAc9G,IAAI,kBACnD,yBAAKf,UAAWC,IAAI2H,OAAQ/G,IAAKiH,KAAa/G,IAAI,kBAGtD,4BAAQuF,QAhCM,WAClB9D,IAAUuF,MAAK,kBAAMC,QAAQC,IAAI,wBA+B7B,gBChDG5C,eAAW9B,GApBW,WAAO,IAAD,EACXH,IAApBhB,EAD+B,EAC/BA,KAAMG,EADyB,EACzBA,UAERI,EAAUC,cAEhB,GAAIL,EACA,OAAO,kBAAC,EAAD,MAGPH,IACoBA,EAAMsB,aAAa,GAErBC,aACdhB,EAAQO,KAAKnB,EAAUwE,MAI/B,OAAO,kBAAC,GAAD,ULxBX,0C,SASYxE,K,SAAAA,E,0CAAAA,E,WAAAA,E,gBAAAA,M,KAOZmG,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMtG,EAAUkC,KAAMqE,UAAWC,KAC9C,kBAAC,IAAD,CAAOF,KAAMtG,EAAUyG,mBAAoBF,UAAWC,KACtD,kBAAC,IAAD,CAAOF,KAAMtG,EAAUwE,IAAK+B,UAAWG,IACvC,kBAAC,IAAD,CAAOJ,KAAMtG,EAAUoB,MAAOmF,UAAWnF,KAE7CyC,SAASC,eAAe,SL4GtB,kBAAmB6C,WACrBA,UAAUC,cAAcC,MACrBb,MAAK,SAAAc,GACJA,EAAaC,gBAEd5D,OAAM,SAAAC,GACL6C,QAAQ7C,MAAMA,EAAM4D,c","file":"static/js/main.1a7b05d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_mQT6O\",\"appHeader\":\"appHeader_1upEd\",\"spinningUser\":\"spinningUser_235kw\",\"festivalDates\":\"festivalDates_1Lvln\",\"unicorn\":\"unicorn_2j3YX\",\"unicornMobile\":\"unicornMobile_UDaqq\",\"moveUnicorn\":\"moveUnicorn_f-fzD\",\"landingPageTop\":\"landingPageTop_OksAy\",\"romoversikt\":\"romoversikt_1m1lh\",\"romfordelingHeading\":\"romfordelingHeading_24moq\",\"etasje\":\"etasje_1a9aJ\",\"userName\":\"userName_3CV4C\",\"festival-dates\":\"festival-dates_OTlG6\",\"App-logo-spin\":\"App-logo-spin_34W4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_1c6Go\",\"spinUnicorn\":\"spinUnicorn_1qXru\",\"spinnerText\":\"spinnerText_ulroZ\",\"spinnerTextContainer\":\"spinnerTextContainer_3Bxxl\",\"dot\":\"dot_2BByR\",\"blink\":\"blink_O7suQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"loginForm_3kzAR\",\"inputContainer\":\"inputContainer_3C7Dm\",\"loginButton\":\"loginButton_1r_Tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2ICEf\",\"headingContainer\":\"headingContainer_eEjNm\",\"heading\":\"heading_reQ47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_rA2Lj\"};","module.exports = __webpack_public_path__ + \"static/media/unicorn-spinner.3725c7c1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_34nrf\"};","module.exports = __webpack_public_path__ + \"static/media/camp-hortenfestival.2a97b4a7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headingLogoContainer\":\"headingLogoContainer_10bqt\"};","module.exports = __webpack_public_path__ + \"static/media/matta.fb322a1e.png\";","module.exports = __webpack_public_path__ + \"static/media/unicorn.c53a49bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/andre-etasje.3d06331f.svg\";","module.exports = __webpack_public_path__ + \"static/media/forste-etasje.ec3cd620.svg\";","module.exports = __webpack_public_path__ + \"static/media/romfordeling-logo.a73f185c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport css from './input.less';\n\ninterface Props {\n    placeholder: string;\n    value: string;\n    onChange: (event: any) => void;\n    type?: string;\n}\n\nconst Input: React.FC<Props> = ({ placeholder, value, onChange, type = 'text' }) => (\n    <input\n        placeholder={placeholder}\n        value={value}\n        type={type}\n        onChange={event => onChange(event)}\n        className={css.input}\n    />\n);\n\nexport default Input;\n","import React, { FormEvent } from 'react';\nimport css from './input-form.less';\n\ninterface Props {\n    onSubmit: (event: FormEvent) => void;\n    errorMessage?: string;\n    buttonLabel: string;\n}\n\nconst InputForm: React.FC<Props> = ({ onSubmit, errorMessage, buttonLabel, children }) => (\n    <form onSubmit={onSubmit} className={css.loginForm}>\n        <div className={css.inputContainer}>\n            {children}\n            {errorMessage && <span>{errorMessage}</span>}\n        </div>\n\n        <button type=\"submit\" className={css.loginButton}>\n            <span>{buttonLabel}</span>\n        </button>\n    </form>\n);\n\nexport default InputForm;\n","import css from './spinner.less';\nimport unicornspinner from './icons/unicorn-spinner.svg';\nimport React from 'react';\n\nconst Spinner = () => {\n    return (\n        <div className={css.spinner}>\n            <img src={unicornspinner} alt=\"spinning-unicorn\" />\n            <h1 className={css.spinnerTextContainer}>\n                <span className={css.spinnerText}>Henter litt festivalstemning</span>\n                <span className={css.dot}>.</span>\n                <span className={css.dot}>.</span>\n                <span className={css.dot}>.</span>\n            </h1>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { useHistory } from 'react-router';\nimport Spinner from '../spinner/Spinner';\nimport { RouteName } from '../../index';\n\nconst firebaseNotInitialized = firebase.apps.length === 0;\nif (firebaseNotInitialized) {\n    const firebaseConfig = {\n        apiKey: 'AIzaSyAnkyD9_105zFHP4qanGUYdmynBHen65KM',\n        authDomain: 'camp-hortenfestvial.firebaseapp.com',\n        databaseURL: 'https://camp-hortenfestvial.firebaseio.com',\n        projectId: 'camp-hortenfestvial',\n        storageBucket: 'camp-hortenfestvial.appspot.com',\n        messagingSenderId: '32123979841',\n        appId: '1:32123979841:web:c321a59f4a94a047d19ec0',\n        measurementId: 'G-TC8JQDP77T',\n    };\n\n    firebase.initializeApp(firebaseConfig);\n}\n\ninterface Authentication {\n    user: firebase.User | null;\n    isLoading: boolean;\n    signOut: () => Promise<void>;\n}\n\nconst AuthenticationContext = createContext<Authentication | null>(null);\n\nconst AuthenticationProvider: React.FC = ({ children }) => {\n    const [authentication, setAuthentication] = useState<Authentication>({\n        user: firebase.auth().currentUser,\n        isLoading: true,\n        signOut: () => firebase.auth().signOut(),\n    });\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const unsubscribe = firebase.auth().onAuthStateChanged(newUser => {\n            setAuthentication(prevAuth => ({\n                ...prevAuth,\n                user: newUser,\n                isLoading: false,\n            }));\n        });\n\n        return unsubscribe;\n    }, []);\n\n    if (authentication.isLoading) {\n        return <Spinner />;\n    }\n\n    if (!authentication.isLoading && !authentication.user) {\n        history.push(RouteName.Login);\n        return null;\n    }\n\n    return <AuthenticationContext.Provider value={authentication}>{children}</AuthenticationContext.Provider>;\n};\n\nexport const useAuthentication = (): Authentication => {\n    const authentication = useContext(AuthenticationContext);\n    if (!authentication) {\n        throw new Error('useAuthentication can only be used within an AuthenticationProvider');\n    }\n    return authentication;\n};\n\nexport const withAuthentication = function withAuthenticationWrapper<T>(\n    WrappedComponent: React.FC<T>,\n): React.FC<T> {\n    return (props: T) => (\n        <AuthenticationProvider>\n            <WrappedComponent {...props} />\n        </AuthenticationProvider>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport { HashRouter, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport UserInformation from './pages/user-information/UserInformation';\nimport Login from './pages/login/Login';\nimport LandingPageWrapper from './pages/landing-page/LandingPageWrapper';\n\nexport enum RouteName {\n    Hjem = '/',\n    CampHortenFestival = '/camp-hortenfestival',\n    Deg = '/deg',\n    Login = '/login',\n}\n\nReactDOM.render(\n    <HashRouter>\n        <Route exact path={RouteName.Hjem} component={LandingPageWrapper} />\n        <Route path={RouteName.CampHortenFestival} component={LandingPageWrapper} />\n        <Route path={RouteName.Deg} component={UserInformation} />\n        <Route path={RouteName.Login} component={Login} />\n    </HashRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport 'firebase/auth';\nimport Input from '../../components/input/Input';\nimport InputForm from '../../components/input-form/InputForm';\nimport css from './user-information.less';\nimport { useAuthentication, withAuthentication } from '../../components/auth/Authentication';\nimport { useHistory } from 'react-router-dom';\nimport { RouteName } from '../../index';\n\nconst UserInformation: React.FC = () => {\n    const { user } = useAuthentication();\n    const history = useHistory();\n    const [name, setName] = useState<string>(\n        user && user.providerData[0] && user.providerData[0].displayName ? user.providerData[0].displayName : '',\n    );\n\n    const updateUser = async () => {\n        await user!.updateProfile({\n            displayName: name,\n        });\n\n        history.push(RouteName.Hjem);\n    };\n\n    return (\n        <div className={css.container}>\n            <div className={css.headingContainer}>\n                <h1 className={css.heading}>Du! Ja du, ja.</h1>\n                <p>Du må fylle ut litt informasjon om deg selv</p>\n            </div>\n            <InputForm onSubmit={updateUser} buttonLabel=\"Nok om meg\">\n                <Input\n                    onChange={event => setName(event.target.value)}\n                    placeholder=\"Hva heter du a?\"\n                    value={name}\n                />\n            </InputForm>\n        </div>\n    );\n};\n\nexport default withAuthentication(UserInformation);\n","import headingLogo from './icons/camp-hortenfestival.svg';\nimport React from 'react';\nimport css from './logo.less';\n\nconst Logo = () => (\n    <div className={css.headingLogoContainer}>\n        <img src={headingLogo} alt=\"camp-hortenfestival-logo\" />\n    </div>\n);\n\nexport default Logo;\n","import React, { FormEvent, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport css from './login.less';\nimport Input from '../../components/input/Input';\nimport Logo from '../../components/logo/Logo';\nimport InputForm from '../../components/input-form/InputForm';\nimport { useHistory } from 'react-router';\nimport { RouteName } from '../../index';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const isValidInput = email && password;\n\n    const history = useHistory();\n\n    const handleSubmit = async (event: FormEvent) => {\n        event.preventDefault();\n\n        if (isValidInput) {\n            await firebase\n                .auth()\n                .signInWithEmailAndPassword(email, password)\n                .catch((error: firebase.auth.Error) => {\n                    if (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password') {\n                        setErrorMessage('E-posten og passordet matcher ikke.');\n                    } else {\n                        setErrorMessage('Her gikk noe galt. Prøv igjen eller ta kontakt med support.');\n                    }\n                });\n\n            history.push(RouteName.Hjem);\n        }\n    };\n\n    return (\n        <div className={css.container}>\n            <Logo />\n            <InputForm onSubmit={handleSubmit} errorMessage={errorMessage} buttonLabel=\"Here I come!\">\n                <Input\n                    value={email}\n                    placeholder=\"Hva er mailen din a?\"\n                    onChange={event => setEmail(event.target.value)}\n                    type=\"email\"\n                />\n                <Input\n                    value={password}\n                    placeholder=\"Passord\"\n                    type=\"password\"\n                    onChange={event => setPassword(event.target.value)}\n                />\n            </InputForm>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport matta from './icons/matta.png';\nimport unicorn from './icons/unicorn.svg';\nimport css from './landing-page.less';\nimport confetti from 'canvas-confetti';\nimport classNames from 'classnames';\nimport andreEtasje from '../../components/romoversikt/icons/andre-etasje.svg';\nimport forsteEtasje from '../../components/romoversikt/icons/forste-etasje.svg';\nimport romfordelingLogo from '../../components/romoversikt/icons/romfordeling-logo.svg';\nimport { useAuthentication, withAuthentication } from '../../components/auth/Authentication';\nimport Logo from '../../components/logo/Logo';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { RouteName } from '../../index';\n\nconst LandingPage = () => {\n    const [mousePosition, setMousePosition] = useState<{ x: number; y: number }>({ x: 0, y: 0 });\n    const { user, signOut } = useAuthentication();\n    const history = useHistory();\n\n    const onMouseMove = (event: any) => {\n        event.preventDefault();\n        setMousePosition({ x: event.pageX, y: event.pageY });\n    };\n\n    const isTochDevice = 'ontouchstart' in window;\n\n    const screenWidth =\n        document && document.getElementById('root') && document.getElementById('root')!.offsetWidth;\n    const screenHeight =\n        document && document.getElementById('root') && document.getElementById('root')!.offsetHeight;\n\n    const xPosition = mousePosition.x;\n    const yPosition = mousePosition.y;\n\n    const launceConfetti = () => {\n        confetti({\n            origin: {\n                x: screenWidth && !isTochDevice ? xPosition / screenWidth : Math.random(),\n                y: screenHeight && !isTochDevice ? yPosition / screenHeight : Math.random(),\n            },\n        });\n    };\n\n    const handleSignOut = () => {\n        signOut().then(() => console.log('Du er logget ut'));\n    };\n\n    const userName = user && user.providerData[0] && user.providerData[0].displayName;\n\n    return (\n        <div className={css.app}>\n            <header className={css.appHeader} onClick={() => history.push(RouteName.Deg)}>\n                <p className={css.userName}>{userName ? `Hei, ${userName}!` : 'Hei!'} </p>\n                <img src={matta} className={css.spinningUser} alt=\"logo\" />\n            </header>\n\n            <div className={css.landingPageTop} onClick={launceConfetti} onMouseMove={onMouseMove}>\n                <img\n                    src={unicorn}\n                    className={classNames(css.unicorn, { [css.unicornMobile]: isTochDevice })}\n                    alt=\"unicorn\"\n                    style={{ left: isTochDevice ? -130 : xPosition, top: isTochDevice ? 50 : yPosition }}\n                />\n\n                <Logo />\n                <p className={css.festivalDates}>18. - 21. juni</p>\n            </div>\n            <div className={css.romoversikt}>\n                <div className={css.romfordelingHeading}>\n                    <img src={romfordelingLogo} alt=\"romfordeling-logo\" />\n                </div>\n                <img className={css.etasje} src={forsteEtasje} alt=\"forste-etasje\" />\n                <img className={css.etasje} src={andreEtasje} alt=\"andre-etasje\" />\n            </div>\n\n            <button onClick={handleSignOut}>Logg ut</button>\n        </div>\n    );\n};\n\nexport default withRouter(withAuthentication(LandingPage));\n","import React from 'react';\nimport { useAuthentication, withAuthentication } from '../../components/auth/Authentication';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport LandingPage from './LandingPage';\nimport Spinner from '../../components/spinner/Spinner';\nimport { RouteName } from '../../index';\n\nconst LandingPageWrapper: React.FC = () => {\n    const { user, isLoading } = useAuthentication();\n\n    const history = useHistory();\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    if (user) {\n        const userprofile = user!.providerData[0];\n\n        if (!userprofile!.displayName) {\n            history.push(RouteName.Deg);\n        }\n    }\n\n    return <LandingPage />;\n};\n\nexport default withRouter(withAuthentication(LandingPageWrapper));\n"],"sourceRoot":""}